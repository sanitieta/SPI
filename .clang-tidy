Checks: -*,
  bugprone-argument-comment,
  bugprone-assert-side-effect,
  bugprone-dangling-handle,
  bugprone-inaccurate-erase,
  bugprone-string-constructor,
  bugprone-string-integer-assignment,
  bugprone-undefined-memory-manipulation,
  bugprone-unused-raii,
  bugprone-use-after-move,
  google-build-explicit-make-pair,
  google-explicit-constructor,
  misc-misleading-identifier,
  misc-homoglyph,
  modernize-concat-nested-namespaces,
  modernize-loop-convert,
  modernize-redundant-void-arg,
  modernize-use-bool-literals,
  modernize-use-default-member-init,
  modernize-use-emplace,
  modernize-use-equals-default,
  modernize-use-equals-delete,
  modernize-use-noexcept,
  modernize-use-nullptr,
  modernize-use-override,
  readability-braces-around-statements,
  readability-identifier-naming,
  readability-implicit-bool-conversion,
  readability-qualified-auto,
  readability-redundant-member-init
CheckOptions:
  - key: bugprone-assert-side-effect.AssertMacros
    value: assert,DCHECK
  - key: bugprone-dangling-handle.HandleClasses
    value: std::basic_string_view;std::span;
  - key: bugprone-string-constructor.StringNames
    value: std::basic_string;std::basic_string_view;
  - key: modernize-use-default-member-init.UseAssignment
    value: 1
  - key: modernize-use-transparent-functors.SafeMode
    value: 1
  - key: modernize-use-emplace.IgnoreImplicitConstructors
    value: 1
  - { key: readability-identifier-naming.ClassCase,           value: CamelCase }
  - { key: readability-identifier-naming.StructCase,          value: CamelCase }
  - { key: readability-identifier-naming.EnumCase,            value: CamelCase }
  - { key: readability-identifier-naming.EnumConstantCase,    value: UPPER_CASE }
  - { key: readability-identifier-naming.NamespaceCase,       value: lower_case }
  - { key: readability-identifier-naming.ClassMemberCase,     value: lower_case }
  - { key: readability-identifier-naming.ClassMemberSuffix,   value: '_' }
  - { key: readability-identifier-naming.FunctionCase,        value: lower_case }
  - { key: readability-identifier-naming.VariableCase,        value: lower_case }
  - { key: readability-identifier-naming.MacroDefinitionCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.GlobalConstantCase,  value: lower_case }